"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7924],{2032:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(1318);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},s),{},{components:n})):r.createElement(f,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var d=2;d<o;d++)c[d]=n[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=n(4219),a=(n(1318),n(2032));const o={title:"Extend"},c=void 0,i={unversionedId:"adavanced/extend",id:"adavanced/extend",title:"Extend",description:"Extend is used to extend your test environment for better testing.",source:"@site/docs/adavanced/extend.mdx",sourceDirName:"adavanced",slug:"/adavanced/extend",permalink:"/xbell/zh-CN/docs/adavanced/extend",draft:!1,editUrl:"https://github.com/x-bell/xbell/tree/main/website/docs/adavanced/extend.mdx",tags:[],version:"current",frontMatter:{title:"Extend"},sidebar:"docs",previous:{title:"Decorator Mode",permalink:"/xbell/zh-CN/docs/adavanced/decorator-mode"}},l={},d=[{value:"Use Extend",id:"use-extend",level:2}],s={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Extend")," is used to extend your test environment for better testing."),(0,a.kt)("p",null,"Take the ",(0,a.kt)("inlineCode",{parentName:"p"},"React component testing")," as an example, and the following code is before ",(0,a.kt)("inlineCode",{parentName:"p"},"extend")," is used."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { test } from 'xbell';\n\ntest.browser('react tests', async ({ page }) => {\n  const { default: React } = await import('react');\n  const { default: ReactDOM } = await import('react-dom');\n\n  const mount = (reactElement) => {\n    ReactDOM.render(reactElement, document.getElementById('root'));\n  };\n\n  await page.goto('https://my-custom-url.com', {\n    html: '<div></div>'\n  });\n\n  // for jsx\n  window.React = React;\n\n  mount(<div>hello xbell</div>);\n});\n")),(0,a.kt)("h2",{id:"use-extend"},"Use Extend"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const testReact = test.browser.extend(async ({ page }) => {\n  const { default: React } = await import('react');\n  const { default: ReactDOM } = await import('react-dom');\n\n  const mount = (reactElement) => {\n    ReactDOM.render(reactElement, document.getElementById('root'));\n  };\n\n  await page.goto('https://my-custom-url.com', {\n    html: '<div></div>'\n  });\n\n  // for jsx\n  window.React = React;\n\n  return { mount };\n});\n\n// use extend to test\ntestReact('react tests', ({ mount }) => {\n    mount(<div>hello xbell</div>);\n});\n")))}p.isMDXComponent=!0}}]);